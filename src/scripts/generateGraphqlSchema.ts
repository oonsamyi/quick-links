import fs from 'fs/promises'
import { GraphQLTypesLoader } from '@nestjs/graphql'
import { graphqlFilesPattern } from './constants/graphql'
import { getAbsolutePath } from './utils/getAbsolutePath'
import { Print } from './utils/print'

const print = new Print('[GRAPHQL_SCHEMA]')

readGraphqlSchema()
  .then(writeGraphqlSchema)
  .then(() => {
    print.success('C—Ö–µ–º–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ')
  })
  .catch((error) => {
    print.error(error)
  })

async function readGraphqlSchema(): Promise<string> {
  const topComment =
    '# üö® –í–ù–ò–ú–ê–ù–ò–ï! –§–∞–π–ª —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã "npm run gen-schema"\n'
  const graphqlFilesPath = getAbsolutePath(graphqlFilesPattern)
  const gqlTypesLoader = new GraphQLTypesLoader()

  const schema = await gqlTypesLoader.mergeTypesByPaths(graphqlFilesPath)

  return [topComment, schema].join('\n')
}

async function writeGraphqlSchema(graphQLSchema: string) {
  const schemaPath = getAbsolutePath('src/server/graphql/schema.graphql')

  await fs.writeFile(schemaPath, graphQLSchema)
}
